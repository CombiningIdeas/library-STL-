//#include <iostream>
//#include <forward_list>
//
//using namespace std;
//
//int main()
//{
//	setlocale(LC_ALL, "Russian");
//
//	forward_list<int> f1 = { 4321,7983, 9032 };
//
//	// Ётот итератор указывает на самый первый элемент, тоесть под индексом 0
//	forward_list<int>::iterator it = f1.begin();
//
//	// Ётот итератор указывает на адрес, который идет перед самым первым элементом
//	// это нужно дл€ того, чтобы можно было вставить потом элемент на нулевой индекс
//	forward_list<int>::iterator it_2 = f1.before_begin();
//
//
//	// как раз таки эта команда вставл€ет элемент, но только после 
//	// того элемента который мы укажем, поэтому и нужен метод before_begin()
//	// тут вставка элемента отличаетс€, потому что мы вставл€ем элемент после, 
//	// а не перед как обычно, но все дело в том, что это односв€зный список и 
//	// элементы тут хран€т указатель на следующий элемент, и не хран€т на предыдущий
//	// поэтому вставка происходит после того элемента, который мы указываем в методе
//	// insert_after(a, b);
//	f1.insert_after(it_2, 777);
//
//	// ћожно двум€ способами вывести односв€зный список с помощью цикла, так же можно
//	// было сделать и с двухсв€зным списком и с любым массивом тоже.
//	cout << "ќдносв€знный список: " << endl;
//	for (auto element : f1)
//	{
//		cout << element << ' ';
//	}
//	cout << endl;
//
//
//	cout << "ќдносв€знный список: " << endl;
//	for (forward_list<int>::iterator ii = f1.begin(); ii != f1.end(); ii++)
//		cout << *ii << ' ';
//	cout << endl;
//
//
//	return 0;
//}